{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/input-search/input-search.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","name","email","CardList","monsters","map","index","InputSearch","placeholder","inputHandler","type","onChange","App","e","setState","text","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAaeA,MAXf,YAA0B,IAAXC,EAAU,EAAVA,QACX,OACI,sBAAKC,UAAU,OAAf,UAEI,6BAAKD,EAAQE,OACb,4BAAIF,EAAQG,YCOTC,MAVf,YAA+B,IAAZC,EAAW,EAAXA,SACf,OACI,qBAAKJ,UAAU,YAAf,SACKI,EAASC,KAAI,SAACN,EAAQO,GAAT,OACV,cAAC,EAAD,CAAMP,QAASA,GAAcO,S,MCO9BC,MAbf,YAAkD,IAA5BC,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,aAC9B,OACI,8BACI,uBACIC,KAAK,SACLC,SAAUF,EACVD,YAAaA,OCFRI,E,kDACnB,aAAc,IAAD,8BACX,gBAaFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,KAAKF,EAAEG,OAAOC,SAb7B,EAAKC,MAAQ,CACXH,KAAK,GACLX,SAAU,IAJD,E,gEAQO,IAAD,OACjBe,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAASmB,S,+BAO/B,IAAD,EACkBC,KAAKN,MAAvBH,EADA,EACAA,KACDU,EAFC,EACMrB,SACqBsB,QAAO,SAAA3B,GAAO,OAAIA,EAAQE,KAAK0B,cAAcC,SAASb,EAAKc,wBAC7F,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,CAAaS,aAAce,KAAKf,aAAcD,YAAY,gBAC1D,cAAC,EAAD,CAAWJ,SAAUqB,W,GAzBIK,aCMlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.adeb625b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Card({monster}) {\r\n    return (\r\n        <div className='card'>\r\n            {/* <img src={} alt={}/> */}\r\n            <h1>{monster.name}</h1>\r\n            <p>{monster.email}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../card/card';\r\n\r\n\r\nfunction CardList({monsters}) {\r\n    return (\r\n        <div className='card-list'>\r\n            {monsters.map((monster,index) => \r\n                <Card monster={monster} key={index}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nfunction InputSearch({placeholder,inputHandler}) {\r\n    return (\r\n        <div>\r\n            <input \r\n                type='search' \r\n                onChange={inputHandler}\r\n                placeholder={placeholder}\r\n\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputSearch;\r\n","import React, { Component } from 'react';\nimport CardList from './components/card-list/card-list';\n\nimport './App.css'\nimport InputSearch from './components/input-search/input-search';\n\nexport default class App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      text:'',\n      monsters: []\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters:users}))\n  }\n\n  inputHandler = e =>{\n    this.setState({text:e.target.value})\n  }\n\n  render() {\n    const {text, monsters} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(text.toLocaleLowerCase()))\n    return (\n      <div className='App'>\n        <InputSearch inputHandler={this.inputHandler} placeholder='search name'/>\n        <CardList  monsters={filteredMonsters}/>\n      </div>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}